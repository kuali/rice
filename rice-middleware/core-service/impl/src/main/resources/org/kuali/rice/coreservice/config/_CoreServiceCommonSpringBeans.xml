<!--

    Copyright 2005-2017 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd">

  <util:constant id="rice.coreService.serviceNamespace" static-field="org.kuali.rice.core.api.CoreConstants$Namespaces.CORE_NAMESPACE_2_0"/>

  <bean id="rice.location.propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" value="#{T(org.kuali.rice.core.api.config.property.ConfigContext).getCurrentContextConfig().getProperties()}" />
	</bean>

  <bean id="coreServiceLocalCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
    <property name="cacheManager">
      <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="${coreService.ehcache.config.location}"/>
    </property>
  </bean>

  <bean id="rice.coreService.import.globalCacheManager" class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean">
    <property name="serviceName" value="globalCacheManager" />
  </bean>

  <cache:annotation-driven cache-manager="rice.coreService.import.globalCacheManager" />

  <!-- spring service that should be exposed on the ksb to receive messages from the distributed cache manager -->
  <bean id="coreServiceCacheAdminService"
        class="org.kuali.rice.core.impl.cache.CacheAdminServiceImpl"
        p:cacheManager-ref="coreServiceLocalCacheManager" />

  <bean id="rice.coreService.import.serviceBus"
        class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean">
    <property name="serviceName" value="rice.ksb.serviceBus"/>
  </bean>

  <bean id="rice.coreService.import.kualiModuleService"
        class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean">
		<property name="serviceName" value="kualiModuleService" />
	</bean>

  <bean id="coreServiceServiceExporter"
        class="org.kuali.rice.ksb.api.bus.support.PropertyConditionalServiceBusExporter"
        abstract="true">
    <property name="serviceBus" ref="rice.coreService.import.serviceBus"/>
  </bean>

  <bean id="coreService" class="org.kuali.rice.ksb.api.bus.support.SoapServiceDefinition" abstract="true">
    <property name="serviceNameSpaceURI" ref="rice.coreService.serviceNamespace"/>
    <property name="jaxWsService" value="true"/>
    <property name="priority" value="3"/>
    <property name="retryAttempts" value="0"/>
    <property name="busSecurity" value="${core.soapExposedService.jaxws.security}"/>
    <property name="serviceVersion" value="${rice.version}"/>
    <property name="servicePath" value="#{ T(org.kuali.rice.core.api.CoreConstants).SERVICE_PATH_SOAP }" />
  </bean>

  <bean id="coreServiceCacheAdminService.exporter" parent="coreServiceServiceExporter">
    <property name="serviceDefinition">
      <bean parent="coreService"
            p:service-ref="coreServiceCacheAdminService"
            p:localServiceName="coreServiceCacheAdminService"
            p:queue="false"/>
    </property>
  </bean>

</beans>