#
# Copyright 2005-2017 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

@cmp{minMaxSection}#headerText=MinMax length and value
@cmp{minMaxSection}#instructionalText=You can set the min and max length of a field and the min and max value of a field.  Min and\
        Max value will only work properly on numeric value fields so it is also a good idea to require those types of\
        characters only through a ValidCharactersConstraint on the field.\
        These can be set directly through InputField's properties or through its SimpleConstraint bean.\
        Note that min value is exclusive and max value is inclusive (as stated by their property names).
@cmp{minMaxSection}#items.field9.label=MinMax Length test
@cmp{minMaxSection}#items.field9.constraintText=MinLength 2 and MaxLength 5
@cmp{minMaxSection}#items.field10.label=MinMax Value test
@cmp{minMaxSection}#items.field10.constraintText=Must be greater than 2 and no more than 50
@cmp{requiredSection}#headerText=Required constraint
@cmp{requiredSection}#instructionalText=An input field can be defined as required by setting its required property to true.  Note required fields are marked with an asterisk.
@cmp{requiredSection}#items.field3.fieldLabel.requiredIndicator=Required
@cmp{requiredSection}#items.field3.instructionalText=different text for required indicator
@cmp{requiredSection}#items.field4.instructionalText=Interesting note is that radios and checkboxes will not check requiredness until a submit event, other constraints dealing with non-null values will still apply as normal
@cmp{requiredSection}#items.field5.instructionalText=different required indicator location
@cmp{preReqSection}#headerText=PreRequisite constraint
@cmp{preReqSection}#instructionalText=When a field is filled out, it can require another field to be filled out as a result.  This is called a PrerequisiteConstraint.\
                                      		Whether that field comes after or before that field is irrelevant, as the ui will only notify the user when appropriate.  For example, if you havent yet\
                                      		visited a field that is now required, the user will only be notified of an error after they have first visited this now required field\
                                      		and have not filled it out.  Alternatively, if the field that is now required comes before the field that requires it, the user will be notified\
                                      		immediately.  These mechanisms are set up to prevent the ui from showing errors before the user had a chance to interact with the corresponding\
                                      		field within the overall page flow.  A useful and common technique is to put a prerequisite constraint on both fields requiring each other\
                                      		(example case: a measurement requires both a value and a unit, neither make sense without the other).\
                                      		A field can have any number of PrerequisiteConstraints in their dependencyConstraints property.
@cmp{preReqSection}#items.field6.constraintText=Field A requires Field B and Field C
@cmp{preReqSection}#items.field7.constraintText=Required when Field A has a value
@cmp{preReqSection}#items.field8.instructionalText=try filling out this field first, and see differences in interaction
@cmp{preReqSection}#items.field8.constraintText=Required when Field A has a value, BUT also requires Field A to be filled out
@cmp{mustOccursSection}#headerText=MustOccurs constraint
@cmp{mustOccursSection}#instructionalText=Must Occurs constraint is used to identify fields that are required before this field can be filled out.\
                                                  This is different from prerequisite constraints because the number of fields required from a set of fields can be set, as\
                                                  well as alternative groups of fields that will satisfy the must occurs constraint.  See examples below:
@cmp{moGroup1}#items.field11.label=Field 1A
@cmp{moGroup1}#items.field12.label=Field 2A
@cmp{moGroup1}#items.field13.label=Field 2B
@cmp{moGroup1}#items.field14.label=Field With MustOccurs
@cmp{moGroup1}#items.field14.constraintText=Field 1A; OR Field 2A with Field 2B must occur when this field has a value
@cmp{moGroup2}#items.field15.label=Field 3A
@cmp{moGroup2}#items.field16.label=Field 4A
@cmp{moGroup2}#items.field17.label=Field 4B
@cmp{moGroup2}#items.field18.label=Field With MustOccurs
@cmp{moGroup2}#items.field18.constraintText=Field 3A; OR Field 4A with Field 4B BUT NOT BOTH (ie all 3 fields filled in) must occur when this field has a value
@cmp{moGroup3}#items.field19.label=Field 5A
@cmp{moGroup3}#items.field20.label=Field 5B
@cmp{moGroup3}#items.field21.label=Field 6A
@cmp{moGroup3}#items.field22.label=Field 6B
@cmp{moGroup3}#items.field23.label=Field With MustOccurs
@cmp{moGroup3}#items.field23.constraintText=More complexity:(5A OR 5B) OR (6A AND 6B) is required by this field
@cmp{caseConstraintSection}#headerText=Case constraint
@cmp{caseConstraintSection}#instructionalText=A case constraint can make a constraint applicable only when a certain case is satisfied.
@cmp{caseConstraintSection}#items.field24.label=Case Radio
@cmp{caseConstraintSection}#items.field24.instructionalText=Choose an option to apply that constraint to the field, this is controlled by that field's CaseConstraint
@cmp{caseConstraintSection}#items.field24.control.options[0].value=Make Field X Required
@cmp{caseConstraintSection}#items.field24.control.options[1].value=Make Field X Required and Allow only AlphaNumeric characters
@cmp{caseConstraintSection}#items.field24.control.options[2].value=Make Field Y allow values no greater than 500 and no more than 3 characters
@cmp{caseConstraintSection}#items.field24.control.options[3].value=Make Field Z1 require Field Z2
@cmp{ccSection1}#items.field25.label=Field X
@cmp{ccSection2}#items.field26.label=Field Y
@cmp{ccSection3}#items.field27.label=Field Z1
@cmp{ccSection3}#items.field28.label=Field Z2
@cmp{ccSection4}#items.field31.label=Field 1
@cmp{ccSection4}#items.field32.label=Field 2
@cmp{ccSection4}#items.field33.label=Field 3
@cmp{ccSection4}#items.field33.instructionalText=When Field 1 has a value AND when Field 2 does not have the value A, this field is required
