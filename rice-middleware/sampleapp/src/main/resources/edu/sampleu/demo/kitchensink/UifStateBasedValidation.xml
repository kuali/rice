<!--

    Copyright 2005-2017 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


  <!--
  ********************************************************************************************************************
                                           UIF Components View (Kitchen Sink)
  ********************************************************************************************************************
  -->
  <bean id="Demo-StateBasedValidation-Server" parent="Uif-FormView">
    <property name="parentLocation">
      <bean parent="Uif-RicePortalParentLocation"/>
    </property>
    <property name="formClass" value="edu.sampleu.demo.kitchensink.UifComponentsTestForm"/>
    <property name="headerText" value="State-based Validation Server-side Test View"/>
    <property name="stateMapping">
      <bean parent="StateMapping">
        <property name="states">
          <list>
            <value>state1</value>
            <value>state2</value>
            <value>state3</value>
            <value>state4</value>
            <value>state5</value>
          </list>
        </property>
        <property name="stateNameMessageKeyMap">
          <map>
            <entry key="state1" value="demo.state1"/>
            <entry key="state2" value="demo.state2"/>
            <entry key="state3" value="demo.state3"/>
            <entry key="state4" value="demo.state4"/>
            <entry key="state5" value="demo.state5"/>
          </map>
        </property>
      </bean>
    </property>
    <property name="footer">
      <bean parent="Uif-FormFooter"/>
    </property>
    <property name="entryPageId" value="Demo-StateBasedValidation-Server-Page1"/>
    <property name="validateClientSide" value="false"/>
    <property name="viewHelperServiceClass"
              value="edu.sampleu.demo.kitchensink.UIfComponentsViewHelperServiceImpl"/>
    <property name="items">
      <list>
        <ref bean="Demo-StateBasedValidation-Server-Page1"/>
      </list>
    </property>
  </bean>

  <bean id="Demo-StateBasedValidation-Server-Page1" parent="Uif-Page">
    <property name="items">
      <list>
        <bean parent="Uif-VerticalBoxSection">
          <property name="items">
            <list>
              <bean parent="Uif-PrimaryActionButton" p:methodToCall="gotoState2"
                    p:actionLabel="Change to State 2"/>
              <bean parent="Uif-PrimaryActionButton" p:methodToCall="gotoState3"
                    p:actionLabel="Change to State 3"/>
              <bean parent="Uif-PrimaryActionButton" p:methodToCall="gotoState4"
                    p:actionLabel="Change to State 4"/>
              <bean parent="Uif-CheckFormAction"/>
              <bean parent="Uif-StateBased-RequiredInstructionsMessage"/>
              <bean parent="Uif-InputField" p:propertyName="state" p:label="State" p:readOnly="true"/>
              <bean parent="Uif-InputField" p:propertyName="field1" p:label="Field 1" p:constraintText="Required
                                        for state2 only">
                <property name="simpleConstraint">
                  <bean parent="SimpleConstraint" p:required="true" p:states="state2"/>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field2" p:label="Field 2" p:constraintText="Required
                  for state2 and after">
                <property name="simpleConstraint">
                  <bean parent="SimpleConstraint" p:required="true" p:states="state2+"/>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field3" p:label="Field 3" p:constraintText="Required
              for state1 through state2">
                <property name="simpleConstraint">
                  <bean parent="SimpleConstraint" p:required="true" p:states="state1>state2"/>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field4" p:label="Field 4" p:constraintText="Required
                                  for state1 and state3">
                <property name="simpleConstraint">
                  <bean parent="SimpleConstraint" p:required="true" p:states="state1,state3"/>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field5" p:label="Field 5"
                    p:constraintText="For state 1 and 2 max 50 characters, for state 3 max 25 characters, for
                    state4 and after 15 characters">
                <property name="simpleConstraint">
                  <bean parent="SimpleConstraint" p:maxLength="50" p:states="state1>state2">
                    <property name="constraintStateOverrides">
                      <list>
                        <bean parent="SimpleConstraint" p:maxLength="25" p:states="state3"/>
                        <bean parent="SimpleConstraint" p:maxLength="15" p:states="state4+"/>
                      </list>
                    </property>
                  </bean>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field6" p:label="Field 6"
                    p:constraintText="Alpha only, state4 and after only upperCase allowed">
                <property name="validCharactersConstraint">
                  <bean parent="AlphaPatternConstraint" p:states="state1>state3">
                    <property name="constraintStateOverrides">
                      <list>
                        <bean parent="AlphaPatternConstraint" p:upperCase="true" p:states="state4+"/>
                      </list>
                    </property>
                  </bean>
                </property>
              </bean>
              <bean parent="Uif-InputField" p:propertyName="field7" p:label="Field 8"
                    p:constraintText="AlphaNumeric only, state3 and after
                                        only Numeric allowed">
                <property name="validCharactersConstraint">
                  <bean parent="AlphaNumericPatternConstraint" p:states="state1>state2">
                    <property name="constraintStateOverrides">
                      <list>
                        <bean parent="NumericPatternConstraint" p:states="state3+"/>
                      </list>
                    </property>
                  </bean>
                </property>
              </bean>
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="Demo-StateBasedValidation-Client" parent="Demo-StateBasedValidation-Server">
    <property name="headerText" value="State-based Validation client-side Test View"/>
    <property name="validateClientSide" value="true"/>
  </bean>

  <bean id="Demo-StateBasedValidation-ClientCustom" parent="Demo-StateBasedValidation-Server">
    <property name="headerText" value="State-based Validation Custom client-side Test View"/>
    <property name="validateClientSide" value="true"/>
    <property name="instructionalText" value="Demonstration of custom client side validation settings: when in
                          either state1 or in state2, the setting is to validate against state3 constraints ON THE CLIENT.  When in state3 and after
                          client validation is n+1 (default); ie state3 validates for state4, state4 validates for state5"/>
    <property name="stateMapping.customClientSideValidationStates">
      <map>
        <entry key="state1" value="state3"/>
        <entry key="state2" value="state3"/>
      </map>
    </property>
  </bean>

</beans>