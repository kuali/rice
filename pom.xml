<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2015 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali.pom</groupId>
    <artifactId>kuali-common</artifactId>
    <version>4.3.9</version>
  </parent>
  <groupId>org.kuali.rice</groupId>
  <artifactId>rice</artifactId>
  <packaging>pom</packaging>
  <name>Rice</name>
  <inceptionYear>2005</inceptionYear>
  <version>2.3.9</version>
  <description>
    The Kuali Rice effort provides an enterprise class middleware suite of integrated products that allows
    both Kuali and non-Kuali applications
    to be built in an agile fashion, such that developers will be able to
    react to
    end-user business requirements in an efficient and productive manner, so
    that they can produce high
    quality business
    applications.
  </description>
  <url>http://${kuali.site.hostname}/rice/${project.version}</url>

  <ciManagement>
    <url>http://ci.rice.kuali.org</url>
  </ciManagement>

  <properties>
    <kuali-cm.version>1.2.9</kuali-cm.version>
    <properties.resolve>false</properties.resolve>

    <!-- This works for Linux/Windows. See the MacOSX profile for the equivalent of this for Mac -->
    <tools.jar.path>${java.home}/../lib/tools.jar</tools.jar.path>

    <!-- These properties modify the release process -->
    <kuali.release.prepare.goals>clean</kuali.release.prepare.goals>
    <kuali.release.goals>deploy</kuali.release.goals>
    <kuali.release.arguments>-DskipTests</kuali.release.arguments>

    <!-- This works for Linux/Windows. See the MacOSX profile for the equivalent of this for Mac -->
    <tools.jar.path>${java.home}/../lib/tools.jar</tools.jar.path>

    <appserver.port>8080</appserver.port>
    <gmaven.stubs.phase>generate-resources</gmaven.stubs.phase>
    <gmaven.compile.phase>compile</gmaven.compile.phase>
    <gmaven.test.compile.phase>test-compile</gmaven.test.compile.phase>
    <checkstyle.suppressions.location>/org/kuali/rice/suppressions.xml</checkstyle.suppressions.location>
    <oracle.jdbc.version>10.2.0.3.0</oracle.jdbc.version>
    <oracle.jdbc.artifactId>ojdbc14</oracle.jdbc.artifactId>
    <mysql.jdbc.version>5.1.24</mysql.jdbc.version>
    <mysql.jdbc.artifactId>mysql-connector-java</mysql.jdbc.artifactId>
    <maven.skip.packaging>false</maven.skip.packaging>
    <maven.failsafe.forkmode>once</maven.failsafe.forkmode>
    <maven.failsafe.forkedProcessTimeoutInSeconds>7200</maven.failsafe.forkedProcessTimeoutInSeconds>
    <maven.failsafe.useSystemClassLoader>true</maven.failsafe.useSystemClassLoader>
    <maven.failsafe.skip>true</maven.failsafe.skip>
    <maven.failsafe.includes>**/*Test.java</maven.failsafe.includes>
    <maven.failsafe.excludes>NOT_NULL</maven.failsafe.excludes>
    <readme.date.format>MMMM d, yyyy</readme.date.format>

    <!-- must provide an explicit pattern - surefire default does not work
      b/c of non-unit test classes that are included in default expression -->
    <maven.surefire.includes>**/*Test.java</maven.surefire.includes>
    <maven.surefire.skip>false</maven.surefire.skip>

    <!-- project dependencies -->
    <ant.version>1.7.0</ant.version>
    <antlr.version>2.7.7</antlr.version>
    <aopalliance.version>1.0</aopalliance.version>
    <asm.version>3.3.1</asm.version>
    <bcprov.version>1.46</bcprov.version>
    <cas-client-core.version>3.2.1</cas-client-core.version>
    <cglib.version>2.2.2</cglib.version>
    <aspectj.version>1.6.8</aspectj.version>
    <bitronix.version>2.1.2</bitronix.version>
    <commons-beanutils.version>1.8.3-kuali-4</commons-beanutils.version>
    <commons-codec.version>1.6</commons-codec.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-fileupload.version>1.3.1</commons-fileupload.version>
    <commons-httpclient.version>3.1</commons-httpclient.version>
    <commons-io.version>2.1</commons-io.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-pool.version>1.5.7</commons-pool.version>
    <commons-digester.version>2.0</commons-digester.version>
    <commons-validator.version>1.3.1</commons-validator.version>
    <connector-api.version>1.5</connector-api.version>
    <cxf.version>2.7.0</cxf.version>
    <jaxb-impl.version>2.2.6</jaxb-impl.version>
    <!--
      There appears to be a problem with the 2.2.5 version of jaxb-impl which cxf 2.7.0 depends on by default.
      Get the following exception when attempting to run cxf-java2ws-plugin on services that use certain Enums:

      java.lang.ClassCastException: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl cannot be cast to com.sun.xml.bind.v2.model.impl.ClassInfoImpl

      One of the specific offenders here is WorkflowDocumentService and it's use of DocumentStatus enum.
      Switching to the 2.1-based verson of jaxb-impl version 2.1.13 causes the problem to go away.
    -->
    <cxf-java2ws-plugin.jaxb-impl.version>2.1.13</cxf-java2ws-plugin.jaxb-impl.version>
    <db-ojb.version>1.0.4-patch8</db-ojb.version>
    <displaytag.version>1.2</displaytag.version>
    <dom4j.version>1.6.1</dom4j.version>
    <dwr.version>3.0.RC2</dwr.version>
    <ehcache.version>2.5.0</ehcache.version>
    <filemonitor.version>1.0-kuali</filemonitor.version>
    <freemarker.version>2.3.20-patch2</freemarker.version>
    <plexus-utils.version>3.0.10</plexus-utils.version>
    <lesscss.version>1.3.3</lesscss.version>
    <yuicompressor.version>2.4.7</yuicompressor.version>
    <closure.version>v20130603</closure.version>
    <wro4j.version>1.7.0</wro4j.version>
    <glassfish-javax-json.version>1.0.1</glassfish-javax-json.version>
    <groovy.version>1.8.5</groovy.version>
    <guava.version>11.0</guava.version>
    <hibernate.version>3.6.9.Final</hibernate.version>
    <jackson.version>1.8.8</jackson.version>
    <javassist.version>3.15.0-GA</javassist.version>
    <javax.inject.version>1</javax.inject.version>
    <jaxen.version>1.1.3</jaxen.version>
    <jdom.version>1.1</jdom.version>
    <jetty.version>8.1.7.v20120910</jetty.version>
    <jmeter.version>1.8.1</jmeter.version>
    <joda-time.version>2.0</joda-time.version>
    <joda-time-jsptags.version>1.1.1</joda-time-jsptags.version>
    <jotm.version>2.1.10</jotm.version>
    <json-api.version>1.0</json-api.version>
    <jsp-api.version>2.1</jsp-api.version>
    <jsr311-api.version>1.1.1</jsr311-api.version>

    <!--
      KULRICE-7262: Bad jstl version in maven repository
      When we are able to bump this version from 1.2, go back to the javax.servlet artifact
    -->
    <jstl.version>1.2</jstl.version>

    <jta.version>1.1</jta.version>
    <junit.version>4.11</junit.version>
    <kuali-mvn.version>1.0.2</kuali-mvn.version>
    <log4j.version>1.2.16</log4j.version>
    <mail.version>1.4.4</mail.version>
    <mockito.version>1.9.0</mockito.version>
    <persistence.version>1.0.1.Final</persistence.version>
    <!-- Quartz 1.8.5 appears to cause strange errors in spring on startup,
      Quartz 2.0.x is an impacting api and database-level change -->
    <quartz.version>1.8.4</quartz.version>
    <selenium-java.version>2.33.0</selenium-java.version>
    <xalan.version>2.7.1</xalan.version>
    <serializer.version>2.7.1</serializer.version>
    <servlet-api.version>2.5</servlet-api.version>
    <slf4j.version>1.6.4</slf4j.version>
    <soa.model.core.version>1.2.2</soa.model.core.version>
    <httpclient.version>4.2.3</httpclient.version>
    <spring-modules-ojb.version>0.8a</spring-modules-ojb.version>
    <spring.version>3.2.3.RELEASE</spring.version>
    <spring.security.version>3.1.0.RELEASE</spring.security.version>
    <struts.version>1.3.10</struts.version>
    <subethasmtp.version>3.1.6</subethasmtp.version>
    <velocity.version>1.6.4</velocity.version>
    <velocity.tools.version>2.0</velocity.tools.version>
    <wss4j.version>1.6.18</wss4j.version>
    <xapool.version>1.5.0-patch4</xapool.version>
    <!-- 2.11.0 is not in maven central repo https://issues.apache.org/jira/browse/XERCESJ-1454 -->
    <xercesImpl.version>2.9.1</xercesImpl.version>
    <xmlunit.version>1.3</xmlunit.version>
    <xstream.version>1.2.2</xstream.version>

    <!-- TODO: Cleanup properties so this can be set to true. -->
    <properties.resolve>false</properties.resolve>

    <!-- database drivers location -->
    <jdbc.drivers.location>${env.M2_REPO}</jdbc.drivers.location>
    <mysql-connector-java.jar.location>${jdbc.drivers.location}/mysql/${mysql.jdbc.artifactId}/${mysql.jdbc.version}/${mysql.jdbc.artifactId}-${mysql.jdbc.version}.jar</mysql-connector-java.jar.location>
    <ojdbc14.jar.location>${jdbc.drivers.location}/com/oracle/${oracle.jdbc.artifactId}/${oracle.jdbc.version}/${oracle.jdbc.artifactId}-${oracle.jdbc.version}.jar</ojdbc14.jar.location>

    <cobertura.maven.plugin.version>2.5.1</cobertura.maven.plugin.version>
    <web.launch.context.path>/kr-dev</web.launch.context.path>

    <!-- Connect documentation generation to site generation -->
    <rice.docbook.phase>pre-site</rice.docbook.phase>
    <rice.docbook.phase.html>${rice.docbook.phase}</rice.docbook.phase.html>
    <rice.docbook.phase.pdf>${rice.docbook.phase}</rice.docbook.phase.pdf>
    <rice.docbook.phase.multi>${rice.docbook.phase}</rice.docbook.phase.multi>
    <!-- Where the original documentation source is located -->
    <rice.docbook.src>${basedir}/src/site/docbook</rice.docbook.src>
    <!-- Where the filtered documentation source is located -->
    <rice.docbook.filtered>${basedir}/target/docbook-filtered</rice.docbook.filtered>
    <!-- The directory containing content that gets published to the website -->
    <rice.site.dir>${basedir}/target/site</rice.site.dir>
    <!-- Where the generated documentation (pdf, html) will be generated -->
    <rice.docbook.dest>${rice.site.dir}/reference</rice.docbook.dest>
    <docbook.date.format>MM-dd-yyyy</docbook.date.format>
    <rice.previousVersion>1.0.3.3</rice.previousVersion>

    <!-- phase for wsdl generation from jaxws annotated interfaces -->
    <rice.java2ws.phase>process-classes</rice.java2ws.phase>
    <enforcer.phase>validate</enforcer.phase>
    <failsafe.phase>integration-test</failsafe.phase>

    <!-- Directory wsdl's get generated into -->
    <wsdl.dir>${project.build.directory}/wsdl</wsdl.dir>
    <plugin.http.version>1.0.5</plugin.http.version>

  </properties>

  <profiles>
    <!-- Setup the dependency tree needed by the deploy logic -->
    <!-- Optimize the nightly build -->
    <profile>
      <id>nightly</id>
      <properties>
        <skipTests>true</skipTests>
        <server.phase>none</server.phase>
        <src.phase>none</src.phase>
        <bin.phase>none</bin.phase>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <kuali.gpg.phase>none</kuali.gpg.phase>
      </properties>
    </profile>
    <!-- Don't need to run the enforcer to validate scm information -->
    <profile>
      <id>scm</id>
      <properties>
        <enforcer.phase>none</enforcer.phase>
      </properties>
    </profile>
    <!-- Profile for quickly creating basic Maven site -->
    <profile>
      <id>minsite</id>
      <properties>
        <rice.docbook.phase>none</rice.docbook.phase>
      </properties>
    </profile>
    <!-- Profile for site generation. Assumes "mvn clean install" has been run -->
    <profile>
      <id>site</id>
      <properties>
        <gmaven.stubs.phase>none</gmaven.stubs.phase>
        <gmaven.compile.phase>none</gmaven.compile.phase>
        <gmaven.test.compile.phase>none</gmaven.test.compile.phase>
        <skipTests>true</skipTests>
        <enforcer.phase>none</enforcer.phase>
        <failsafe.phase>none</failsafe.phase>
        <rice.java2ws.phase>none</rice.java2ws.phase>
      </properties>
    </profile>
    <!-- Setup the dependency tree needed by the deploy logic -->
    <profile>
      <id>kdo</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>spring-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.kuali.rice</groupId>
                <artifactId>rice-impex-master</artifactId>
                <classifier>sql</classifier>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.common</groupId>
                <artifactId>kuali-jdbc</artifactId>
                <version>${kuali-jdbc.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.common</groupId>
                <artifactId>kuali-util</artifactId>
                <version>${kuali-util.version}</version>
              </dependency>
              <dependency>
                <groupId>org.kuali.common</groupId>
                <artifactId>kuali-deploy</artifactId>
                <version>${kuali-deploy.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>MacOSX</id>
      <activation>
        <file>
          <exists>${java.home}/../Classes/classes.jar</exists>
        </file>
      </activation>
      <properties>
        <tools.jar.path>${java.home}/../Classes/classes.jar</tools.jar.path>
      </properties>
    </profile>
    <profile>
      <id>license</id>
      <properties>
        <kuali.testjar.phase>none</kuali.testjar.phase>
        <gmaven.stubs.phase>none</gmaven.stubs.phase>
        <gmaven.compile.phase>none</gmaven.compile.phase>
        <gmaven.test.compile.phase>none</gmaven.test.compile.phase>
        <maven.test.skip>true</maven.test.skip>
        <enforcer.phase>none</enforcer.phase>
        <failsafe.phase>none</failsafe.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
            <configuration>
              <aggregate>true</aggregate>
              <excludes>
                <!-- Directory excludes -->
                <exclude>db/impex/**</exclude>
                <exclude>config/ide/**</exclude>
                <exclude>rice-middleware/it/**</exclude>
                <exclude>rice-framework/krad-it/**</exclude>
                <exclude>src/site/docbook/**</exclude>
                <exclude>**/src/it/**</exclude>
                <exclude>rice-framework/krad-web/src/main/webapp/plugins/**</exclude>
                <exclude>rice-framework/config/ide/**</exclude>
                <exclude>rice-middleware/config/ide/**</exclude>
                <exclude>rice-middleware/web/src/main/webapp/kr/scripts/jscalendar-1.0/**</exclude>

                <!-- js plugin folders -->
                <exclude>**/datatables/**</exclude>
                <exclude>**/easyXDM/**</exclude>
                <exclude>**/jscalendar-1.0/**</exclude>
                <exclude>**/plugins/cookie/**</exclude>
                <exclude>**/plugins/dirtyform/**</exclude>
                <exclude>**/plugins/easing/**</exclude>
                <exclude>**/plugins/easydrag/**</exclude>
                <exclude>**/plugins/fancybox/**</exclude>
                <exclude>**/plugins/globalize/**</exclude>
                <exclude>**/plugins/jgrowl/**</exclude>
                <exclude>**/plugins/jqform/**</exclude>
                <exclude>**/plugins/jquery/**</exclude>
                <exclude>**/plugins/jqueryUI/**</exclude>
                <exclude>**/plugins/json/**</exclude>
                <exclude>**/plugins/jstree/**</exclude>
                <exclude>**/plugins/prettify/**</exclude>
                <exclude>**/plugins/scrollto/**</exclude>
                <exclude>**/plugins/tooltip/**</exclude>
                <exclude>**/plugins/validate/**</exclude>
                <exclude>**/plugins/watermark/**</exclude>

                <!-- File excludes -->
                <exclude>LICENSE.txt</exclude>
                <exclude>scripts/bean-rename/beanReplacements.txt</exclude>
                <exclude>scripts/bean-rename/cssReplacements.txt</exclude>
                <exclude>**/jquery.*</exclude>
                <exclude>**/kew/scripts/cal2.js</exclude>
                <exclude>**/kew/scripts/cal_conf2.js</exclude>
                <exclude>**/kew/scripts/prototype.js</exclude>
                <exclude>**/smartspinner.*</exclude>

                <!-- File type excludes -->
                <exclude>**/*.pdf</exclude>
                <exclude>**/*.swf</exclude>
                <exclude>**/*.launch</exclude>
                <exclude>**/.gitignore</exclude>
                <exclude>**/rice.cer</exclude>
                <exclude>**/rice.keystore</exclude>
                <exclude>**/ricekeystore</exclude>
                <exclude>**/*.template</exclude>
                <exclude>**/clover.license</exclude>
                <exclude>**/*.psd</exclude>
                <exclude>**/.springBeans</exclude>
                <exclude>**/*.tag</exclude>
                <exclude>**/Thumbs.db</exclude>
                <exclude>**/README</exclude>
                <exclude>**/*.readme</exclude>
                <exclude>**/*.tmp</exclude>
                <exclude>**/ChangeLog</exclude>
                <exclude>**/org.apache.cxf.Logger</exclude>
                <exclude>**/jquery*.js</exclude>
                <exclude>**/*.developer</exclude>
                <exclude>**/authorized_keys</exclude>
                <exclude>**/*.txt</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <testResources>
      <!-- NOTE: Because Maven test runs can be spawned in a new JVM, the system
        properties on the initial Maven command line are not necessarily propagated
        to the spawned test run. This means we cannot automatically use System property
        definitions to override configuration parameters. To work around this, we
        have configured the test resources to be pre-filtered by maven prior to running,
        which results in config parameter tokens being replaced by System property
        definitions (because the ${token} syntax happens to be the same. So. If you
        need to introduce a new configuration property that needs to be overridable
        by Bamboo/CI, make sure to set the property in one of the below config files,
        so that it can be pre-emptively replaced by Maven prior to kicking off the
        test run. E.g. <param name="my.new.param">${my.new.param}</param> -->
      <testResource>
        <filtering>true</filtering>
        <directory>${basedir}/src/test/resources/META-INF</directory>
        <includes>
          <include>${project.name}-test-config.xml</include>
          <include>sample-app-test-config.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>spring-maven-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>commons-io</groupId>
              <artifactId>commons-io</artifactId>
              <version>2.4</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>org.kuali.common</groupId>
              <artifactId>kuali-cm</artifactId>
              <version>${kuali-cm.version}</version>
            </dependency>
            <dependency>
              <groupId>org.kuali.rice</groupId>
              <artifactId>rice-checkstyle</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.agilejava.docbkx</groupId>
          <artifactId>docbkx-maven-plugin</artifactId>
          <version>2.0.14</version>
          <configuration>
            <sourceDirectory>${rice.docbook.filtered}/books</sourceDirectory>
            <xincludeSupported>true</xincludeSupported>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.docbook</groupId>
              <artifactId>docbook-xml</artifactId>
              <version>4.4</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
        <!--
          This plugin helps enforce that excluded dependencies stay excluded
          and don't sneak back in through another dependency (a global ban). Here are
          a few common situations this plugin helps with:

          1) multiple implementations of a dependency - you only want to use one implementation
          (ex: commons-logging vs jcl-over-slf4j, javax.mail vs geronimo-javamail_1.4_spec)
          2) similar maven artifacts are produced for the same project - you only need to include one
          (ex: cglib vs cglib-nodep)
          3) an artifact's group id or artifact id has been renamed - maven considers these different
          artifacts and you only want to include one
          (ex: opensymphony:quartz vs org.opensymphony.quartz:quartz vs org.quartz-scheduler:quartz)
          4) an artifact was added to the container and no longer is needed
          (ex: jaxb in java 6)

          This plugin also helps enforce consistent a consistent Java & Maven version are used. This helps the
          stability of builds across systems.

          This plugin also enforces that plugins specify a version number. Using meta version tags or not specifing a version
          on a plugin is a decrecated feature as it leads to build instability.

          Finally, the DependencyConvergence rule helps ensure that all of our submodules are resolving the same versions
          of
          artifacts by making sure that all deps converge. This managed at the dep management section which is critical.
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <executions>
            <execution>
              <id>enforce-banned-dependencies</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <phase>${enforcer.phase}</phase>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>1.6</version>
                  </requireJavaVersion>
                  <requireMavenVersion>
                    <version>[3.0,4.0)</version>
                  </requireMavenVersion>
                  <!-- has problems with snapshots
                    <DependencyConvergence /> -->

                  <!-- Maven 3 Migration: This rule is not supported by Maven 3. See:
                    http://jira.codehaus.org/browse/MENFORCER-98 -->
                  <!-- <requirePluginVersions>
                    <message>Specifying a plugin w/o a version is a deprecated
                    feature b/c it can cause non-reproducible builds</message>
                    <banLatest>true</banLatest>
                    <banRelease>true</banRelease>
                    <banSnapshots>true</banSnapshots>
                    <phases>clean,deploy,site</phases>
                    </requirePluginVersions> -->

                  <bannedDependencies>
                    <excludes>
                      <!-- using the kuali version of ojb -->
                      <exclude>ojb</exclude>

                      <!-- renamed (decrecated) groupids -->
                      <exclude>struts</exclude>
                      <exclude>wss4j</exclude>
                      <exclude>acegisecurity</exclude>
                      <exclude>xstream</exclude>
                      <exclude>uk.ltd.getahead</exclude>
                      <exclude>quartz</exclude>
                      <exclude>jdom</exclude>
                      <exclude>groovy</exclude>
                      <exclude>bouncycastle</exclude>
                      <exclude>org.opensymphony.quartz</exclude>
                      <exclude>opensymphony:quartz</exclude>
                      <exclude>javassist</exclude>
                      <exclude>org.jasig.cas</exclude>
                      <exclude>com.google.code.google-collections</exclude>
                      <exclude>com.google.collections</exclude>

                      <!-- jcl-over-slf4j is an alternate implementation of commons-logging - excluding commons-logging -->
                      <exclude>commons-logging</exclude>
                      <!-- already including a different jcl-over-slf4j -->
                      <exclude>org.slf4j:jcl104-over-slf4j</exclude>
                      <!-- excluding all slf4j -->
                      <exclude>org.slf4j</exclude>

                      <!-- already including cglib-nodep -->
                      <exclude>cglib:cglib</exclude>
                      <!-- already including the jdk16 version -->
                      <exclude>org.bouncycastle:bcprov-jdk14</exclude>
                      <!-- already including the jdk16 version -->
                      <exclude>org.bouncycastle:bcprov-jdk15</exclude>

                      <!-- excluding old jstl implementations which can cause hard-to-detect errors -->
                      <exclude>taglibs:standard</exclude>
                      <exclude>javax.servlet:jstl</exclude>
                      <!-- allowing (including) a specific version below -->

                      <!-- already including javax.mail -->
                      <exclude>javamail</exclude>
                      <exclude>geronimo:geronimo-mail</exclude>
                      <exclude>org.apache.geronimo.javamail:geronimo-javamail_1.4_mail</exclude>
                      <exclude>org.apache.geronimo.javamail:geronimo-javamail_1.3.1_mail</exclude>
                      <exclude>org.apache.geronimo.modules:geronimo-mail</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-javamail_1.4_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-javamail_1.3.1_spec</exclude>

                      <!-- already including javax.transation -->
                      <exclude>org.apache.geronimo.specs:geronimo-jta_1.1_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-jta_1.0.1B_spec</exclude>
                      <exclude>geronimo-spec:geronimo-spec-jta</exclude>
                      <exclude>org.ow2.spec.ee:ow2-jta-1.1-spec</exclude>
                      <exclude>jta</exclude>

                      <!-- aleady including the hibernate implementation -->
                      <exclude>javax.persistence</exclude>

                      <!-- activation apis - in jdk 6 -->
                      <exclude>javax.activation</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-activation_1.0.2_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-activation_1.1_spec</exclude>

                      <!-- metadata apis - in jdk 6 -->
                      <exclude>javax.jws</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-ws-metadata_2.0_spec</exclude>

                      <!-- These are repackaged parser apis - some of these apis are
                        included in jdk 6. The non-jdk parsers can be added indivually if needed. -->
                      <exclude>xerces:xmlParserAPIs</exclude>
                      <exclude>xml-apis</exclude>

                      <!-- group ids for many sun xml apis - in jdk 6 -->
                      <exclude>javax.xml</exclude>
                      <exclude>com.sun.xml</exclude>

                      <!-- jaxb apis - in jdk 6 -->
                      <exclude>javax.xml.bind</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-jaxb_2.1_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-jaxb_2.2_spec</exclude>
                      <exclude>com.sun.xml.bind:jaxb-impl</exclude>

                      <!-- jaxws apis - in jdk 6 -->
                      <exclude>javax.xml.ws</exclude>
                      <exclude>com.sun.xml.ws</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-jaxws_2.1_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-jaxws_2.2_spec</exclude>

                      <!-- stax apis - in jdk 6 -->
                      <exclude>javax.xml.stream</exclude>
                      <exclude>com.sun.xml.stream</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.2_spec</exclude>
                      <exclude>stax</exclude>

                      <!-- jaxp apis - in jdk 6 -->
                      <exclude>javax.xml.parsers</exclude>
                      <exclude>com.sun.xml.parsers</exclude>
                      <exclude>org.apace.servicemix.specs:org.apache.servicemix.specs.jaxp-api-1.4
                      </exclude>
                      <exclude>
                        org.apache.servicemix.specs:org.apache.servicemix.specs.jaxp-api-1.3
                      </exclude>

                      <!-- saaj apis - in jdk 6 -->
                      <exclude>javax.xml.soap</exclude>
                      <exclude>javax.xml.soap:saaj-api</exclude>
                      <exclude>javax.xml.soap:saaj-impl</exclude>
                      <exclude>com.sun.xml.messaging.saaj</exclude>
                      <exclude>org.apache.geronimo.specs:geronimo-saaj_1.3_spec</exclude>
                      <exclude>geronimo-spec:geronimo-spec-saaj</exclude>
                      <exclude>org.apache.servicemix.specs:org.apache.servicemix.specs.saaj-api-1.3</exclude>

                      <!--
                        excluding standard release - we are using a patches kuali version
                        because of
                        http://bugs.sun.com/view_bug.do?bug_id=6528714
                        https://issues.apache.org/jira/browse/BEANUTILS-340
                      -->
                      <exclude>commons-beanutils:commons-beanutils</exclude>
                      <exclude>org.apache.commons:commons-beanutils</exclude>

                      <!-- exclude eh cache in general - only allow at a specific scope -->
                      <exclude>net.sf.ehcache</exclude>

                      <!--
                        KULRICE-7262: Bad jstl version in maven repository
                        When we go back to the javax.servlet artifact, we'll need to remove this
                      -->
                      <exclude>javax.servlet:jstl</exclude>
                    </excludes>

                    <includes>
                      <!-- only allow in this specific version -->

                      <!--
                        KULRICE-7262: Bad jstl version in maven repository
                        When we are able to bump this version, go back to the javax.servlet artifact
                      -->
                      <!-- <include>javax.servlet:jstl:${jstl.version}</include> -->
                      <include>org.glassfish.web:jstl-impl:${jstl.version}</include>

                      <include>org.slf4j:*:${slf4j.version}</include>
                      <include>net.sf.ehcache:*:${ehcache.version}:jar:runtime</include>
                      <include>com.sun.xml.bind:jaxb-impl:${jaxb-impl.version}</include>
                    </includes>
                  </bannedDependencies>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <!-- impl module is huge and requires at least 768m to compile -->
            <fork>true</fork>
            <meminitial>256</meminitial>
            <maxmem>1024</maxmem>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>1.4</version>
          <configuration>
            <providerSelection>1.8</providerSelection>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.gmaven.runtime</groupId>
              <artifactId>gmaven-runtime-1.8</artifactId>
              <version>1.4</version>
              <exclusions>
                <exclusion>
                  <groupId>org.codehaus.groovy</groupId>
                  <artifactId>groovy-all</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-all</artifactId>
              <version>${groovy.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>gmaven-generate-stubs</id>
              <phase>${gmaven.stubs.phase}</phase>
              <goals>
                <goal>generateStubs</goal>
              </goals>
            </execution>
            <execution>
              <id>gmaven-compile-stubs</id>
              <phase>${gmaven.compile.phase}</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <!-- test stubs aren't needed now since we are not creating
              groovy test code for reference in java test code -->
            <!--<goal>generateTestStubs</goal> -->
            <execution>
              <id>gmaven-test-compile-stubs</id>
              <phase>${gmaven.test.compile.phase}</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>${maven.skip.packaging}</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.samaxes.maven</groupId>
          <artifactId>maven-minify-plugin</artifactId>
          <version>1.3.5</version>
        </plugin>
        <plugin>
          <groupId>com.sun.tools.jxc.maven2</groupId>
          <artifactId>maven-jaxb-schemagen-plugin</artifactId>
          <version>1.2</version>
        </plugin>

        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty.version}</version>
          <configuration>
            <webAppConfig>
              <contextPath>${web.launch.context.path}</contextPath>
            </webAppConfig>
            <systemProperties>
              <systemProperty>
                <name>web.bootstrap.spring.file</name>
                <value>${bootstrap.spring.file}</value>
              </systemProperty>
            </systemProperties>
          </configuration>

          <dependencies>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>${oracle.jdbc.artifactId}</artifactId>
              <version>${oracle.jdbc.version}</version>
              <scope>runtime</scope>
            </dependency>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>${mysql.jdbc.artifactId}</artifactId>
              <version>${mysql.jdbc.version}</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tomcat-maven-plugin</artifactId>
          <version>1.1</version>
          <configuration>
            <port>${appserver.port}</port>
            <path>${web.launch.context.path}</path>
            <systemProperties>
              <web.bootstrap.spring.file>${bootstrap.spring.file}</web.bootstrap.spring.file>
            </systemProperties>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>${oracle.jdbc.artifactId}</artifactId>
              <version>${oracle.jdbc.version}</version>
              <scope>runtime</scope>
            </dependency>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>${mysql.jdbc.artifactId}</artifactId>
              <version>${mysql.jdbc.version}</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-java2ws-plugin</artifactId>
          <version>${cxf.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-rt-frontend-jaxws</artifactId>
              <version>${cxf.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-rt-frontend-simple</artifactId>
              <version>${cxf.version}</version>
            </dependency>
            <dependency>
              <groupId>com.sun.xml.bind</groupId>
              <artifactId>jaxb-impl</artifactId>
              <version>${jaxb-impl.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <genWsdl>true</genWsdl>
            <verbose>false</verbose>
            <attachWsdl>false</attachWsdl>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <skip>${maven.surefire.skip}</skip>
            <useFile>false</useFile>
            <failIfNoTests>false</failIfNoTests>
            <includes>
              <include>${maven.surefire.includes}</include>
            </includes>
            <reportFormat>plain</reportFormat>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <execution>
              <id>integration-test</id>
              <phase>${failsafe.phase}</phase>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <systemPropertyVariables>
              <remote.public.url>http://localhost:8080/kr-dev/</remote.public.url>
            </systemPropertyVariables>
            <skip>${maven.failsafe.skip}</skip>
            <additionalClasspathElements>
              <additionalClasspathElement>${mysql-connector-java.jar.location}</additionalClasspathElement>
              <additionalClasspathElement>${ojdbc14.jar.location}</additionalClasspathElement>
            </additionalClasspathElements>
            <useSystemClassLoader>${maven.failsafe.useSystemClassLoader}</useSystemClassLoader>
            <useFile>false</useFile>
            <failIfNoTests>false</failIfNoTests>
            <includes>
              <include>${maven.failsafe.includes}</include>
            </includes>
            <excludes>
              <exclude>${maven.failsafe.excludes}</exclude>
            </excludes>
            <forkMode>${maven.failsafe.forkmode}</forkMode>
            <forkedProcessTimeoutInSeconds>${maven.failsafe.forkedProcessTimeoutInSeconds}</forkedProcessTimeoutInSeconds>
            <reportFormat>plain</reportFormat>
            <argLine>-Dalt.config.location="${build.alt.config.location}" -Xmx1024m -XX:MaxPermSize=512m
              -XX:+UseConcMarkSweepGC
              -XX:+CMSClassUnloadingEnabled</argLine>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>${mysql.jdbc.artifactId}</artifactId>
              <version>${mysql.jdbc.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>selenium-maven-plugin</artifactId>
          <version>2.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${cobertura.maven.plugin.version}</version>
          <configuration>
            <instrumentation>
              <ignores>
                <ignore>${kuali.cobertura.instrumentation.ignore}</ignore>
              </ignores>
              <excludes>
                <exclude>${kuali.cobertura.instrumentation.exclude}</exclude>
              </excludes>
            </instrumentation>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>maven-http-plugin</artifactId>
          <version>${plugin.http.version}</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <versionRange>[1.4,)</versionRange>
                    <goals>
                      <goal>generateStubs</goal>
                      <goal>compile</goal>
                      <goal>testCompile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-timestamp</id>
            <phase>${rice.docbook.phase}</phase>
            <goals>
              <goal>create-timestamp</goal>
            </goals>
            <configuration>
              <timestampFormat>${docbook.date.format}</timestampFormat>
              <timestampPropertyName>docbook.build.timestamp</timestampPropertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-documentation-source</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>${rice.docbook.phase}</phase>
            <configuration>
              <outputDirectory>${rice.docbook.filtered}</outputDirectory>
              <resources>
                <resource>
                  <directory>${rice.docbook.src}</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*.xml</include>
                    <include>**/*.css</include>
                    <include>**/*.xsl</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${rice.docbook.src}</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.css</exclude>
                    <exclude>**/*.xsl</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-documentation-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>${rice.docbook.phase}</phase>
            <configuration>
              <outputDirectory>${rice.docbook.dest}</outputDirectory>
              <resources>
                <resource>
                  <directory>${rice.docbook.filtered}</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.xsl</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-html-docs</id>
            <goals>
              <goal>generate-html</goal>
            </goals>
            <phase>${rice.docbook.phase.html}</phase>
            <configuration>
              <htmlStylesheet>../css/stylesheet.css</htmlStylesheet>
              <targetDirectory>${rice.docbook.dest}/html</targetDirectory>
              <tableBordersWithCss>true</tableBordersWithCss>
              <calloutGraphicsPath>../images/callouts/</calloutGraphicsPath>
              <useExtensions>1</useExtensions>
              <linenumberingExtension>1</linenumberingExtension>
              <linenumberingEveryNth>1</linenumberingEveryNth>
            </configuration>
          </execution>
          <execution>
            <id>generate-pdf-docs</id>
            <goals>
              <goal>generate-pdf</goal>
            </goals>
            <phase>${rice.docbook.phase.pdf}</phase>
            <configuration>
              <foCustomization>${rice.docbook.filtered}/stylesheets/fo-stylesheet.xsl</foCustomization>
              <targetDirectory>${rice.docbook.dest}/pdf</targetDirectory>
              <useExtensions>1</useExtensions>
              <linenumberingExtension>1</linenumberingExtension>
              <linenumberingEveryNth>1</linenumberingEveryNth>
            </configuration>
          </execution>
          <execution>
            <id>generate-multi-page-html-docs</id>
            <goals>
              <goal>generate-html</goal>
            </goals>
            <phase>${rice.docbook.phase.multi}</phase>
            <configuration>
              <chunkedOutput>true</chunkedOutput>
              <htmlStylesheet>../../css/stylesheet.css</htmlStylesheet>
              <targetDirectory>${rice.docbook.dest}/html-multi</targetDirectory>
              <calloutGraphicsPath>../../images/callouts/</calloutGraphicsPath>
              <imgSrcPath>../</imgSrcPath>
              <tableBordersWithCss>true</tableBordersWithCss>
              <useExtensions>1</useExtensions>
              <linenumberingExtension>1</linenumberingExtension>
              <linenumberingEveryNth>1</linenumberingEveryNth>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>remove-fo-files</id>
            <phase>${rice.docbook.phase}</phase>
            <configuration>
              <target>
                <delete quiet="true">
                  <fileset dir="${rice.docbook.dest}/pdf" includes="**/*.fo" />
                </delete>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-launcher</artifactId>
            <version>1.8.1</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>

  </build>
  <modules>
    <module>db</module>
    <module>development-tools</module>
    <module>rice-middleware</module>
    <module>rice-framework</module>
    <module>config</module>
    <module>dist</module>
  </modules>

  <repositories>
    <repository>
      <id>kuali.nexus</id>
      <name>Nexus Repository Manager</name>
      <url>http://nexus.kuali.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>antlr</groupId>
        <artifactId>antlr</artifactId>
        <version>${antlr.version}</version>
      </dependency>

      <dependency>
        <groupId>aopalliance</groupId>
        <artifactId>aopalliance</artifactId>
        <version>${aopalliance.version}</version>
      </dependency>

      <!-- explicitly including asm to change version number from what maven would have resolved it to -->
      <dependency>
        <groupId>asm</groupId>
        <artifactId>asm</artifactId>
        <version>${asm.version}</version>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <!-- using nodep to resolve a problem with the asm dependency -->
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib.version}</version>
      </dependency>

      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons-dbcp.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${commons-httpclient.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons-lang.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-pool</groupId>
        <artifactId>commons-pool</artifactId>
        <version>${commons-pool.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-digester</groupId>
        <artifactId>commons-digester</artifactId>
        <version>${commons-digester.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>commons-beanutils</artifactId>
            <groupId>commons-beanutils</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-validator</groupId>
        <artifactId>commons-validator</artifactId>
        <version>${commons-validator.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <!-- excluding because tiles requires a newer version than is brought in from 1.3.1 of commons-validator -->
          <exclusion>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
          </exclusion>

          <exclusion>
            <artifactId>commons-beanutils</artifactId>
            <groupId>commons-beanutils</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.oracle</groupId>
        <artifactId>${oracle.jdbc.artifactId}</artifactId>
        <version>${oracle.jdbc.version}</version>
        <!--<scope>provided</scope> -->
      </dependency>

      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>

      <dependency>
        <groupId>displaytag</groupId>
        <artifactId>displaytag</artifactId>
        <version>${displaytag.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl104-over-slf4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>commons-beanutils</artifactId>
            <groupId>commons-beanutils</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>${dom4j.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>${mail.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- required by jotm -->
      <dependency>
        <groupId>javax.resource</groupId>
        <artifactId>connector-api</artifactId>
        <version>${connector-api.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>javax.json</artifactId>
        <version>${glassfish-javax-json.version}</version>
      </dependency>

      <dependency>
        <!--
          KULRICE-7262: Bad jstl version in maven repository
          When we are able to bump this version, go back to the javax.servlet artifact.

          Note that the rice-core-impl, rice-core-service-impl, and rice-impl poms also need
          to have this changed. Search on the Jira tag to easily find all the changes.
        -->
        <!-- <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId> -->
        <groupId>org.glassfish.web</groupId>
        <artifactId>jstl-impl</artifactId>
        <version>${jstl.version}</version>
        <!-- should be provided scope on newer containers like tomcat 7 -->
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>javax.json</groupId>
        <artifactId>javax.json-api</artifactId>
        <version>${json-api.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.transaction</groupId>
        <artifactId>jta</artifactId>
        <version>${jta.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>${jsr311-api.version}</version>
      </dependency>

      <!-- explicitly including jaxen to change version number from what maven would have resolved it to -->
      <dependency>
        <groupId>jaxen</groupId>
        <artifactId>jaxen</artifactId>
        <version>${jaxen.version}</version>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time-jsptags</artifactId>
        <version>${joda-time-jsptags.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>${mysql.jdbc.artifactId}</artifactId>
        <version>${mysql.jdbc.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache-core</artifactId>
        <version>${ehcache.version}</version>
        <!-- consider making this optional so it's not always shipped with rice -->
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>no.geosoft</groupId>
        <artifactId>filemonitor</artifactId>
        <version>${filemonitor.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxb-impl.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-api</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
          </exclusion>
          <exclusion>
              <groupId>org.apache.velocity</groupId>
              <artifactId>velocity</artifactId>
          </exclusion>          
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-core</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-databinding-aegis</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-databinding-jaxb</artifactId>
        <version>${cxf.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-bindings-soap</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxws</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-simple</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-ws-security</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts-core</artifactId>
        <version>${struts.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>antlr</artifactId>
            <groupId>antlr</groupId>
          </exclusion>
          <exclusion>
            <artifactId>commons-beanutils</artifactId>
            <groupId>commons-beanutils</groupId>
          </exclusion>
          <exclusion>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts-el</artifactId>
        <version>${struts.version}</version>
        <exclusions>
          <exclusion>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts-extras</artifactId>
        <version>${struts.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts-taglib</artifactId>
        <version>${struts.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.ws.security</groupId>
        <artifactId>wss4j</artifactId>
        <version>${wss4j.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk14</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk16</artifactId>
        <version>${bcprov.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${groovy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${jackson.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.directwebremoting</groupId>
        <artifactId>dwr</artifactId>
        <version>${dwr.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <groupId>xerces</groupId>
            <artifactId>xmlParserAPIs</artifactId>
          </exclusion>
          <exclusion>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.0-api</artifactId>
        <version>${persistence.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jasig.cas.client</groupId>
        <artifactId>cas-client-core</artifactId>
        <version>${cas-client-core.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>${jdom.version}</version>
      </dependency>

      <dependency>
        <groupId>org.kuali.common</groupId>
        <artifactId>kuali-mvn</artifactId>
        <version>${kuali-mvn.version}</version>
      </dependency>

      <dependency>
        <groupId>org.kuali.commons</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.kuali.db.ojb</groupId>
        <artifactId>db-ojb</artifactId>
        <version>${db-ojb.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>commons-beanutils</artifactId>
            <groupId>commons-beanutils</groupId>
          </exclusion>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
          <!--Removing the asm 1.5.3 version that comes with OJB -->
          <exclusion>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium-java.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring.security.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-cas</artifactId>
        <version>${spring.security.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-client-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springmodules</groupId>
        <artifactId>spring-modules-ojb</artifactId>
        <version>${spring-modules-ojb.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
          </exclusion>
          <exclusion>
            <!-- we moved our patch to groupId org.kuali.db.ojb -->
            <groupId>ojb</groupId>
            <artifactId>db-ojb</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.subethamail</groupId>
        <artifactId>subethasmtp</artifactId>
        <version>${subethasmtp.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.ow2.jotm</groupId>
        <artifactId>jotm-core</artifactId>
        <version>${jotm.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.spec.ee</groupId>
            <artifactId>ow2-jta-1.1-spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- bitronix -->
      <dependency>
        <groupId>org.codehaus.btm</groupId>
        <artifactId>btm</artifactId>
        <version>${bitronix.version}</version>
      </dependency>

      <dependency>
        <groupId>xalan</groupId>
        <artifactId>xalan</artifactId>
        <version>${xalan.version}</version>
      </dependency>

      <dependency>
        <groupId>xalan</groupId>
        <artifactId>serializer</artifactId>
        <version>${serializer.version}</version>
        <exclusions>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- groupid was changed to com.experlog in later versions -->
        <groupId>xapool</groupId>
        <artifactId>xapool</artifactId>
        <version>${xapool.version}</version>
      </dependency>

      <!-- explicitly including xercesImpl to change version number from what maven would have resolved it to -->
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xercesImpl.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>xmlunit</groupId>
        <artifactId>xmlunit</artifactId>
        <version>${xmlunit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.predic8</groupId>
        <artifactId>soa-model-core</artifactId>
        <version>${soa.model.core.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Added dependency to improve spring bean loading e.g KualiDefaultListableBeanFactory in rice-core-framework -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>${plexus-utils.version}</version>
      </dependency>

      <dependency>
        <groupId>org.lesscss</groupId>
        <artifactId>lesscss</artifactId>
        <version>${lesscss.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.yahoo.platform.yui</groupId>
        <artifactId>yuicompressor</artifactId>
        <version>${yuicompressor.version}</version>
      </dependency>

      <dependency>
          <groupId>com.google.javascript</groupId>
         <artifactId>closure-compiler</artifactId>
         <version>${closure.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity-tools</artifactId>
          <version>${velocity.tools.version}</version>
          <exclusions>
              <exclusion>
                  <groupId>commons-digester</groupId>
                  <artifactId>commons-digester</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>commons-beanutils</groupId>
                  <artifactId>commons-beanutils</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>org.apache.struts</groupId>
                  <artifactId>struts-taglib</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>org.apache.struts</groupId>
                  <artifactId>struts-tiles</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>org.apache.struts</groupId>
                  <artifactId>struts-core</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>xml-apis</groupId>
                  <artifactId>xml-apis</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity</artifactId>
          <version>${velocity.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.kuali.org/</url>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:kuali/rice.git</developerConnection>
    <connection>scm:git:git@github.com:kuali/rice.git</connection>
    <url>https://github.com/kuali/rice/tree/${project.scm.tag}</url>
    <tag>rice-2.3.9</tag>
  </scm>

</project>
