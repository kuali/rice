<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2017 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="Uif-SaveAction" parent="Uif-PrimaryActionButton" p:methodToCall="save" p:actionLabel="Save"
        p:performClientSideValidation="true" p:focusOnIdAfterSubmit="FIRST"
        p:loadingMessageText="Saving..." p:clearDirtyOnAction="true" p:id="usave"/>

  <bean id="Uif-SaveAction-Secondary" parent="Uif-SecondaryActionButton" p:methodToCall="save" p:actionLabel="Save"
        p:performClientSideValidation="true" p:focusOnIdAfterSubmit="FIRST"
        p:loadingMessageText="Saving..." p:clearDirtyOnAction="true" p:id="usave"/>

  <bean id="Uif-BackAction" parent="Uif-PrimaryActionButton" p:methodToCall="back"
        p:actionLabel="&lt; Back" p:performDirtyValidation="true"/>

  <bean id="Uif-CancelAction" parent="Uif-SecondaryActionButton" p:methodToCall="cancel"
        p:actionLabel="Cancel" p:performDirtyValidation="true" p:id="ucancel"/>

  <bean id="Uif-RecallAction" parent="Uif-SecondaryActionButton" p:methodToCall="recall"
        p:actionLabel="Recall" p:performDirtyValidation="true" p:id="urecall"/>

  <bean id="Uif-CheckFormAction" parent="Uif-SecondaryActionButton" p:methodToCall="checkForm"
        p:actionLabel="Check Form" p:loadingMessageText="Checking Form..." p:id="ucheck"/>

  <bean id="Uif-AddLineAction-parentBean" abstract="true" parent="Uif-SecondaryActionButton-Mini"
        p:methodToCall="addLine" p:actionLabel="Add"
        p:actionEvent="addLine" p:loadingMessageText="Adding Line..." p:focusOnIdAfterSubmit="LINE_FIRST"
        p:performClientSideValidation="true" p:dirtyOnAction="true" p:id="@{#collectionGroup.id}_add"
        p:defaultEnterKeyAction="true"/>

  <bean id="Uif-AddLineAction" parent="Uif-AddLineAction-parentBean"/>

  <bean id="Uif-AddLineAction-Dialog" parent="Uif-AddLineAction-parentBean" p:actionLabel="Add" p:dialogDismissOption="REQUEST">
    <property name="libraryCssClasses">
      <list>
        <value>btn</value>
        <value>btn-primary</value>
      </list>
    </property>
  </bean>

  <!-- Edit button for the collection lines -->
  <bean id="Uif-EditLineInDialogAction" parent="EditLineInDialogAction-parentBean"
        p:render="@{#collectionGroup.editWithDialog}"/>
  <bean id="EditLineInDialogAction-parentBean" abstract="true" parent="Uif-SecondaryActionButton-Mini" p:actionLabel="Edit in Dialog">
    <property name="actionParameters">
      <map>
        <entry key="lineIndex" value="@{#index}"/>
      </map>
    </property>
  </bean>

  <!-- Edit button for the edit line dialog -->
  <bean id="Uif-EditLineInDialogSaveAction" parent="Uif-SecondaryActionButton" p:actionLabel="Save Changes"
        p:methodToCall="editLine" p:actionEvent="editLine" p:loadingMessageText="Editing Line..."
        p:focusOnIdAfterSubmit="LINE_FIRST"
        p:defaultEnterKeyAction="true" p:dialogDismissOption="REQUEST"
        p:onClickScript="writeCurrentPageToSession(this);"
        p:fieldsToSend="#Uif-EditLineDialog_@{#collectionGroup.id}_line@{#index}">
  </bean>

  <bean id="Uif-DeleteLineAction" parent="Uif-SecondaryActionButton-Mini" p:methodToCall="deleteLine"
        p:actionLabel="Delete"
        p:onMouseOverScript="deleteLineMouseOver(this, 'uif-collectionDeleteHighlight');"
        p:onMouseOutScript="deleteLineMouseOut(this, 'uif-collectionDeleteHighlight');"
        p:onClickScript="writeCurrentPageToSession(this);" p:dirtyOnAction="true"
        p:loadingMessageText="Deleting Line..." p:id="@{#collectionGroup.id}_del"/>

  <bean id="Uif-DeleteLineAction-IconOnly" parent="Uif-DeleteLineAction" p:actionLabel="" p:iconClass="icon-close"/>

  <bean id="Uif-SaveLineAction" parent="Uif-SecondaryActionButton-Mini" p:methodToCall="saveLine" p:actionLabel="Save"
        p:render="@{#collectionGroup.renderSaveLineActions}" p:disabled="@{!isAddedCollectionItem(#line)}"
        p:performClientSideValidation="true" p:id="@{#collectionGroup.id}_save" p:loadingMessageText="Saving Line..."
        p:onClickScript="writeCurrentPageToSession(this);">
    <property name="cssClasses">
      <list>
        <value>uif-saveLineAction</value>
      </list>
    </property>
  </bean>

  <bean id="Uif-SaveLineAction-IconOnly" parent="Uif-SaveLineAction" p:actionLabel="" p:iconClass="icon-disk"/>

  <bean id="Uif-AddBlankLineAction" parent="Uif-SecondaryActionButton-Mini" p:methodToCall="addBlankLine"
        p:actionLabel="Add Line" p:actionEvent="addBlankLine" p:id="@{#collectionGroup.id}_add"/>

  <bean id="Uif-AddWithDialogAction" parent="Uif-SecondaryActionButton-Mini" p:actionLabel="Add Line"/>

  <bean id="Uif-ToggleRowDetailsAction" parent="Uif-SecondaryActionButton-Mini" p:actionLabel="Open/Close Row Details"
        p:actionScript="toggleRowDetails(this);"/>

  <bean id="Uif-ExpandDetailsAction" parent="Uif-ActionLink" p:actionLabel="Details">
    <property name="cssClasses">
      <list>
        <value>uif-detailsAction</value>
      </list>
    </property>
    <property name="actionParameters">
      <map>
        <entry key="lineIndex" value="@{#index}"/>
      </map>
    </property>
  </bean>

  <bean id="Uif-ExpandDetailsImageAction" parent="Uif-ActionLink">
    <property name="cssClasses">
      <list>
        <value>uif-detailsAction</value>
      </list>
    </property>
    <property name="dataAttributes">
      <map merge="true">
        <entry key="swap" value="true"/>
      </map>
    </property>
    <property name="actionParameters">
      <map>
        <entry key="lineIndex" value="@{#index}"/>
      </map>
    </property>
    <property name="actionImage">
      <bean parent="Uif-Image" p:altText="Details"
            p:source="@{#ConfigProperties['krad.externalizable.images.url']}details_open.png"/>
    </property>
  </bean>

  <bean id="Uif-JumpToTopLink" parent="Uif-ActionLink" p:actionScript="jumpToTop();"
        p:actionLabel="Top">
    <property name="cssClasses">
      <list>
        <value>uif-jumpToTopLink</value>
      </list>
    </property>
  </bean>

  <bean id="Uif-JumpToBottomLink" parent="Uif-ActionLink" p:actionScript="jumpToBottom();"
        p:actionLabel="Bottom">
    <property name="cssClasses">
      <list>
        <value>uif-jumpToBottomLink</value>
      </list>
    </property>
  </bean>

  <bean id="Uif-ExpandDisclosuresButton" parent="Uif-SecondaryActionButton-Mini"
        p:actionScript="expandDisclosures();" p:actionLabel="Expand All"/>

  <bean id="Uif-CollapseDisclosuresButton" parent="Uif-SecondaryActionButton-Mini"
        p:actionScript="collapseDisclosures();" p:actionLabel="Collapse All"/>

  <bean id="Uif-ShowInactiveCollectionItemsButton" parent="Uif-SecondaryActionButton-Mini"
        p:methodToCall="refresh" p:actionLabel="show inactive" p:refreshId="@{#collectionGroup.id}"
        p:preSubmitCall="setComponentState('@{#collectionGroup.id}','inactive', true);return true;">
    <property name="cssClasses">
      <list>
        <value>uif-showInactiveCollectionItemsButton</value>
      </list>
    </property>
  </bean>

  <bean id="Uif-HideInactiveCollectionItemsButton" parent="Uif-SecondaryActionButton-Mini"
        p:methodToCall="refresh" p:actionLabel="Hide Inactive" p:refreshId="@{#collectionGroup.id}"
        p:preSubmitCall="setComponentState('@{#collectionGroup.id}','inactive', false);return true;">
    <property name="cssClasses">
      <list>
        <value>uif-hideInactiveCollectionItemsButton</value>
      </list>
    </property>
  </bean>

</beans>